#ifndef EFI_PROTOCOL_SECUREBOOT_AUTHENTICATIONINFO_H
#define EFI_PROTOCOL_SECUREBOOT_AUTHENTICATIONINFO_H

#include <EFI/Types.h>

#define EFI_AUTHENTICATION_INFO_PROTOCOL_GUID \
    { 0x7671D9D0, 0x53DB, 0x4173, { 0xAA, 0x69, 0x23, 0x27, 0xF2, 0x1F, 0x0B, 0xC7 } }

#define EFI_AUTHENTICATION_CHAP_RADIUS_GUID \
    { 0xD6062B50, 0x15CA, 0x11DA, { 0x92, 0x19, 0x00, 0x10, 0x83, 0xFF, 0xCA, 0x4D } }

#define EFI_AUTHENTICATION_CHAP_LOCAL_GUID \
    { 0xC280C73E, 0x13CA, 0x11DA, { 0xB0, 0xCA, 0x00, 0x10, 0x83, 0xFF, 0xCA, 0x4D } }

typedef struct _EFI_AUTHENTICATION_INFO_PROTOCOL EFI_AUTHENTICATION_INFO_PROTOCOL;

typedef UINT32 EFI_IMAGE_EXECUTION_ACTION;

#define EFI_IMAGE_EXECUTION_AUTHENTICATION      (0x00000007)
#define EFI_IMAGE_EXECUTION_AUTH_UNTESTED       (0x00000000)
#define EFI_IMAGE_EXECUTION_AUTH_SIG_FAILED     (0x00000001)
#define EFI_IMAGE_EXECUTION_AUTH_SIG_PASSED     (0x00000002)
#define EFI_IMAGE_EXECUTION_AUTH_SIG_NOT_FOUND  (0x00000003)
#define EFI_IMAGE_EXECUTION_AUTH_SIG_FOUND      (0x00000004)
#define EFI_IMAGE_EXECUTION_POLICY_FAILED       (0x00000005)
#define EFI_IMAGE_EXECUTION_INITIALIZED         (0x00000008)

//
// EFI_IMAGE_EXECUTION_INFO
//
typedef struct {
    EFI_IMAGE_EXECUTION_ACTION  Action;
    UINT32                      InfoSize;
    // CHAR16                   Name[ANYSIZE_ARRAY];
    // EFI_DEVICE_PATH_PROTOCOL DevicePath;
    // EFI_SIGNATURE_LIST       Signature;
} EFI_IMAGE_EXECUTION_INFO;

//
// EFI_IMAGE_EXECUTION_INFO_TABLE
//
typedef struct {
    UINTN                       NumberOfImages;
    EFI_IMAGE_EXECUTION_INFO    InformationInfo[1];
} EFI_IMAGE_EXECUTION_INFO_TABLE;

#define EFI_IMAGE_SECURITY_DATABASE_GUID \
    { 0xD719B2CB, 0x3D3A, 0x4596, { 0xA3, 0xBC, 0xDA, 0xD0, 0x0E, 0x67, 0x65, 0x6F } }

#define EFI_IMAGE_SECURITY_DATABASE     L"db"
#define EFI_IMAGE_SECURITY_DATABASE1    L"dbx"
#define EFI_IMAGE_SECURITY_DATABASE2    L"dbt"

typedef
EFI_STATUS
(EFIAPI *EFI_AUTHENTICATION_INFO_PROTOCOL_GET) (
    IN EFI_AUTHENTICATION_INFO_PROTOCOL     *This,
    IN EFI_HANDLE                           ControllerHandle,
    OUT VOID                                **Buffer
);

typedef
EFI_STATUS
(EFIAPI *EFI_AUTHENTICATION_INFO_PROTOCOL_SET) (
    IN EFI_AUTHENTICATION_INFO_PROTOCOL     *This,
    IN EFI_HANDLE                           ControllerHandle,
    IN VOID                                 *Buffer
);

struct _EFI_AUTHENTICATION_INFO_PROTOCOL {
    EFI_AUTHENTICATION_INFO_PROTOCOL_GET    Get;
    EFI_AUTHENTICATION_INFO_PROTOCOL_SET    Set;
};

#endif // EFI_PROTOCOL_SECUREBOOT_AUTHENTICATIONINFO_H