#ifndef EFI_PROTOCOL_PATH_DEVICEPATH_H
#define EFI_PROTOCOL_PATH_DEVICEPATH_H

#include <EFI/Types.h>

#define EFI_DEVICE_PATH_PROTOCOL_GUID \
    { 0x09576E91, 0x6D3F, 0x11D2, { 0x8E, 0x39, 0x00, 0xA0, 0xC9, 0x69, 0x72, 0x3B } }

#define EFI_PNP_ID(ID)  ((UINT32)(((ID) << 16) | 0x41D0))
#define EISA_PNP_ID(ID) EFI_PNP_ID(ID)

#define EFI_PC_ANSI_GUID \
    { 0xE0C14753, 0xF9BE, 0x11D2, { 0x9A, 0x0C, 0x00, 0x90, 0x27, 0x3F, 0xC1, 0x4D } }
#define EFI_VT_100_GUID \
    { 0xDFA66065, 0xB419, 0x11D3, { 0x9A, 0x2D, 0x00, 0x90, 0x27, 0x3F, 0xC1, 0x4D } }
#define EFI_VT_100_PLUS_GUID \
    { 0x7BAEC70B, 0x57E0, 0x4C76, {0x8E, 0x87, 0x2F, 0x9E, 0x28, 0x08, 0x83, 0x43 } }
#define EFI_VT_UTF8_GUID \
    { 0xAD15A0D6, 0x8BEC, 0x4ACF, {0xA0, 0x73, 0xD0, 0x1D, 0xE7, 0x7E, 0x2D, 0x88 } }

#define DEVICE_PATH_MESSAGING_UART_FLOW_CONTROL \
    { 0x37499A9D, 0x542F, 0x4C89, { 0xA0, 0x26, 0x35, 0xDA, 0x14, 0x20, 0x94, 0xE4 } }

typedef struct _EFI_DEVICE_PATH_PROTOCOL {
    UINT8 Type;
    UINT8 SubType;
    UINT8 Length[2];
} EFI_DEVICE_PATH_PROTOCOL;

#endif // EFI_PROTOCOL_PATH_DEVICEPATH_H